// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user{
  id BigInt @id @default(autoincrement())
  firstName String
  lastName String
  email String @unique
  mobile String
  passwoard String
  otp String 
  created_at DateTime @default(now()) @db.Timestamp(0) 
  updated_at DateTime @default(now()) @db.Timestamp(0) @updatedAt
  categories categories []
  products products []
  customers customers []
  invoices invoices []
  invoices_products invoices_products []
}
model categories{
  id BigInt @id @default(autoincrement())
  name String
  created_at DateTime @default(now()) @db.Timestamp(0) 
  updated_at DateTime @default(now()) @db.Timestamp(0) @updatedAt
  user_id BigInt
  user user @relation(fields: [user_id],references: [id],onDelete: Restrict,onUpdate: Cascade)
  products products []

}

model products{
  id BigInt @id @default(autoincrement())
  name String
  price String
  unit String
  img_url String
  created_at DateTime @default(now()) @db.Timestamp(0) 
  updated_at DateTime @default(now()) @db.Timestamp(0) @updatedAt
  user_id BigInt
  user user @relation(fields: [user_id],references: [id],onDelete: Restrict,onUpdate: Cascade)
  category_id BigInt
  categories categories @relation(fields: [category_id],references: [id],onDelete: Restrict,onUpdate: Cascade)
  invoices_products invoices_products []

}

model customers {
  id BigInt @id @default(autoincrement())
  name String
  email String
  mobile String
  created_at DateTime @default(now()) @db.Timestamp(0) 
  updated_at DateTime @default(now()) @db.Timestamp(0) @updatedAt 
  user_id BigInt
  user user @relation(fields: [user_id],references: [id],onDelete: Restrict,onUpdate: Cascade)
  invoices invoices []

}
model invoices {
   id BigInt @id @default(autoincrement())
   total String
   discount String
   vat String
   created_at DateTime @default(now()) @db.Timestamp(0) 
   updated_at DateTime @default(now()) @db.Timestamp(0) @updatedAt
   user_id BigInt
   user user @relation(fields: [user_id],references: [id],onDelete: Restrict,onUpdate: Cascade)
   customer_id BigInt 
   customers customers @relation(fields: [customer_id],references: [id],onDelete: Restrict,onUpdate: Cascade)
   invoices_products invoices_products []

}

model invoices_products {
  id BigInt @id @default(autoincrement())
  qnt String
  sale_price String
  created_at DateTime @default(now()) @db.Timestamp(0) 
  updated_at DateTime @default(now()) @db.Timestamp(0) @updatedAt
  invoices_id BigInt
  invoices invoices @relation(fields: [invoices_id],references: [id],onDelete: Restrict,onUpdate: Cascade)
  product_id BigInt
  products products @relation(fields: [product_id],references: [id],onDelete: Restrict,onUpdate: Cascade)
  user_id BigInt
  user user @relation(fields: [user_id],references: [id],onDelete: Restrict,onUpdate: Cascade)



}

